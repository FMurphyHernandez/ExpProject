
ss=2014



set.seed(ss)

library(cclust)

a=10
b=c()
k=10
F=c()
FK=array(list(),1)
G=c()
H=c()
HK=array(list(),1)
Eini=0
E0=c()
Emin=c()
u=1
ptm <- proc.time()





library(RODBC)
chanel <- odbcConnect("Ral98")
cadsql<-c('')
cadsql<- paste('SELECT',
'[EXPORTADO]',
',[dn]',
',isnull([MESES_ANTIGUEDAD],0) as [MESES_ANTIGUEDAD] ',
',isnull([ARPM_1],0) as [ARPM_1]',
',isnull([ARPM_2],0) as [ARPM_2]',
',isnull([ARPM_3],0) as [ARPM_3]',
',isnull([ARPU_VOICE_1],0) as [ARPU_VOICE_1]',
',isnull([ARPU_VOICE_2],0) as [ARPU_VOICE_2]',
',isnull([ARPU_VOICE_3],0) as [ARPU_VOICE_3]',
',isnull([ARPU_SMS_1],0) as [ARPU_SMS_1]',
',isnull([ARPU_SMS_2],0) as [ARPU_SMS_2]',
',isnull([ARPU_SMS_3],0) as [ARPU_SMS_3]',
',isnull([ARPU_DATA_1],0) as [ARPU_DATA_1]',
',isnull([ARPU_DATA_2],0) as [ARPU_DATA_2]',
',isnull([ARPU_DATA_3],0) as [ARPU_DATA_3]',
',isnull([ARPU_OTHER_1],0) as [ARPU_OTHER_1]',
',isnull([ARPU_OTHER_2],0) as [ARPU_OTHER_2]',
',isnull([ARPU_OTHER_3],0) as [ARPU_OTHER_3]',
',isnull([INGRESOS_SVA_1],0) as [INGRESOS_SVA_1]',
',isnull([INGRESOS_SVA_2],0) as [INGRESOS_SVA_2]',
',isnull([INGRESOS_SVA_3],0) as [INGRESOS_SVA_3]',
',isnull([MTO_IVA_RECARGA_1],0) as [MTO_IVA_RECARGA_1]',
',isnull([RECARGAS_1],0) as [RECARGAS_1]',
',isnull([MTO_IVA_RECARGA_2],0) as [MTO_IVA_RECARGA_2]',
',isnull([RECARGAS_2],0) as [RECARGAS_2]',
',isnull([MTO_IVA_RECARGA_3],0) as [MTO_IVA_RECARGA_3]',
',isnull([RECARGAS_3],0) as [RECARGAS_3]',
',isnull([CVE_EQUIPO],0) as [CVE_EQUIPO]',
',isnull([GAMA_ALTA_EQUIPO_PRIMERO],0) as [GAMA_ALTA_EQUIPO_PRIMERO]',
',isnull([CVE_EQUIPO_ULTIMO],0) as [CVE_EQUIPO_ULTIMO]',
',case when isnull([GAMA_ALTA_EQUIPO_ULTIMO],0)>0 then 1 else 0 end as [GAMA_ALTA_EQUIPO_ULTIMO]',
',isnull([QUEJAS_1],0)+isnull([QUEJAS_2],0)+isnull([QUEJAS_3],0) as [QUEJAS]',
' FROM [dbo].[JIC_MODEXP2]',
' where',
'cve_mes=201409',
'and id_num between 1 and 20000 order by id_num desc',sep=' ')
datos <- sqlQuery(chanel, cadsql)
close(chanel)








for(j in 1:ncol(datos))
datos[,j]=as.numeric(datos[,j])
rownames(datos)=datos$dn





x.scaled=scale(datos[,-1])
y=cbind(datos[,1],x.scaled)
datos=data.frame(y)
colnames(datos)[1]='EXP'
auxdatos=datos[,-c(2,28,29,30,32)]
datos2=auxdatos
result=cclust(as.matrix(datos2),a,iter.max = 5000)
x=table(result$cluster,datos[,1])
Ini=result
Eini=mean(result$centers[,1])



for(j in 1:k){
	h=0
	while(min(x[result$cluster,2]/(x[result$cluster,2]+x[result$cluster,1]))==0){
		F=rbind(F,x[,2]==0)
		datos=datos[x[result$cluster,2]/(x[result$cluster,2]+x[result$cluster,1])!=0,]
		x.scaled=scale(datos[,-1])
		y=cbind(datos[,1],x.scaled)
		datos=data.frame(y)
		colnames(datos)[1]='EXP'
		auxdatos=datos[,-c(2,28,29,30,32)]
		datos2=auxdatos
		result=cclust(as.matrix(datos2),a,iter.max = 5000)
		FK[[u]]=result
		E0=cbind(E0,mean(result$centers[,1]))
		u=u+1
		h=h+1
		x=table(result$cluster,datos[,1])
		}
	G=c(G,h)
	H=rbind(H,x[,2]/(x[,1]+x[,2])==min(x[,2]/(x[,1]+x[,2])))
	datos=datos[x[result$cluster,2]/(x[result$cluster,2]+x[result$cluster,1])>min(x[result$cluster,2]/(x[result$cluster,2]+x[result$cluster,1])),]
	x.scaled=scale(datos[,-1])
	y=cbind(datos[,1],x.scaled)
	datos=data.frame(y)
	colnames(datos)[1]='EXP'
	auxdatos=datos[,-c(2,28,29,30,32)]
	datos2=auxdatos
	result=cclust(as.matrix(datos2),a,iter.max = 5000)
	HK[[j]]=result
	Emin=cbind(Emin,mean(result$centers[,1]))
	x=table(result$cluster,datos[,1])
	}

h=0
while(min(x[result$cluster,2]/(x[result$cluster,2]+x[result$cluster,1]))==0){
	datos=datos[x[result$cluster,2]/(x[result$cluster,2]+x[result$cluster,1])!=0,]
	x.scaled=scale(datos[,-1])
	y=cbind(datos[,1],x.scaled)
	datos=data.frame(y)
	colnames(datos)[1]='EXP'
	auxdatos=datos[,-c(2,28,29,30,32)]
	datos2=auxdatos
	result=cclust(as.matrix(datos2),a,iter.max = 5000)
	FK[[u]]=result
	E0=cbind(E0,mean(result$centers[,1]))
	u=u+1
	h=h+1
	x=table(result$cluster,datos[,1])
	}
G=c(G,h)
d=proc.time() - ptm
b=rbind(b,c(d[3]/60,sum(x),sum(x[,2]),sum(x[,2])/sum(x)))
F
G
H
S
sum(x)
colSums(x)
sum(x[,2])/sum(x)
nrow(datos)
Q1=cbind(rownames(datos),result$cluster)










require(MASS)
datos=datos[,-c(28,29,30)]
n=10
LDA=array(list(),1)
DD=c()
A=matrix(0,10)
B=matrix(0,10)
C=matrix(0,10)
D=matrix(0,10)
E=matrix(0,10)
V=c()


for(i in 1:n){
	x=datos[result$cluster==i,]
	d=apply(x,2,sd)
	d=(d!=0)
	DD=rbind(DD,d)
	x=x[,d]
	x.scaled=scale(x[,-1])
	y=cbind(x[,1],x.scaled)
	y=data.frame(y)
	colnames(y)[1]='EXP'
	LDA[[i]]=lda(formula=EXP~.,data=y)
	print(class(LDA[[i]]))
	w=predict(object=LDA[[i]],newdata=data.frame(x.scaled))
	a=w$class
	b=as.numeric(a)-1
	A[i]=sum(b)
	r=(x$EXP==b & b==1)
	v=x[r,]
	#v=cbind(v[,1],rep(i,sum(r)))
	v=cbind(v,rep(i,sum(r)))
	rownames(v)=rownames(x[r,])
	V=rbind(V,v)
	q=as.numeric(r)
	B[i]=sum(q)
	C[i]=100*sum(q)/sum(b)
	D[i]=sum(b)*4265446/20000
	E[i]=(sum(q)/sum(b))*(sum(b)*4265446/20000)
	}




length(LDA)
for(i in 1:n)
print(class(LDA[[i]]))
cbind(A,B,C,D,E)
colSums(cbind(A,B,D,E))
sum(B)*100/sum(A)




set.seed(ss)
k=10
library(DeducerExtras)
library(RODBC)
chanel <- odbcConnect("Ral98")
cadsql<-c('')
cadsql<- paste('SELECT',
'[EXPORTADO]',
',[dn]',
',isnull([MESES_ANTIGUEDAD],0) as [MESES_ANTIGUEDAD] ',
',isnull([ARPM_1],0) as [ARPM_1]',
',isnull([ARPM_2],0) as [ARPM_2]',
',isnull([ARPM_3],0) as [ARPM_3]',
',isnull([ARPU_VOICE_1],0) as [ARPU_VOICE_1]',
',isnull([ARPU_VOICE_2],0) as [ARPU_VOICE_2]',
',isnull([ARPU_VOICE_3],0) as [ARPU_VOICE_3]',
',isnull([ARPU_SMS_1],0) as [ARPU_SMS_1]',
',isnull([ARPU_SMS_2],0) as [ARPU_SMS_2]',
',isnull([ARPU_SMS_3],0) as [ARPU_SMS_3]',
',isnull([ARPU_DATA_1],0) as [ARPU_DATA_1]',
',isnull([ARPU_DATA_2],0) as [ARPU_DATA_2]',
',isnull([ARPU_DATA_3],0) as [ARPU_DATA_3]',
',isnull([ARPU_OTHER_1],0) as [ARPU_OTHER_1]',
',isnull([ARPU_OTHER_2],0) as [ARPU_OTHER_2]',
',isnull([ARPU_OTHER_3],0) as [ARPU_OTHER_3]',
',isnull([INGRESOS_SVA_1],0) as [INGRESOS_SVA_1]',
',isnull([INGRESOS_SVA_2],0) as [INGRESOS_SVA_2]',
',isnull([INGRESOS_SVA_3],0) as [INGRESOS_SVA_3]',
',isnull([MTO_IVA_RECARGA_1],0) as [MTO_IVA_RECARGA_1]',
',isnull([RECARGAS_1],0) as [RECARGAS_1]',
',isnull([MTO_IVA_RECARGA_2],0) as [MTO_IVA_RECARGA_2]',
',isnull([RECARGAS_2],0) as [RECARGAS_2]',
',isnull([MTO_IVA_RECARGA_3],0) as [MTO_IVA_RECARGA_3]',
',isnull([RECARGAS_3],0) as [RECARGAS_3]',
',isnull([CVE_EQUIPO],0) as [CVE_EQUIPO]',
',isnull([GAMA_ALTA_EQUIPO_PRIMERO],0) as [GAMA_ALTA_EQUIPO_PRIMERO]',
',isnull([CVE_EQUIPO_ULTIMO],0) as [CVE_EQUIPO_ULTIMO]',
',case when isnull([GAMA_ALTA_EQUIPO_ULTIMO],0)>0 then 1 else 0 end as [GAMA_ALTA_EQUIPO_ULTIMO]',
',isnull([QUEJAS_1],0)+isnull([QUEJAS_2],0)+isnull([QUEJAS_3],0) as [QUEJAS]',
' FROM [dbo].[JIC_MODEXP2]',
' where',
'cve_mes=201409',
'and id_num between 1 and 20000 order by id_num desc',sep=' ')
datos <- sqlQuery(chanel, cadsql)
close(chanel)
rownames(datos)=datos$dn




library(cclust)
library(clue)




for(i in 1:ncol(datos))
datos[,i]=as.numeric(datos[,i])
x.scaled=scale(datos[,-1])
y=cbind(datos[,1],x.scaled)
datos=data.frame(y)
colnames(datos)[1]='EXP'
datos[,1]=Eini
auxdatos=datos[,-c(2,28,29,30,32)]
datos2=auxdatos
Pred=predict(Ini,as.matrix(datos2))$cluster

w=1
for(j in 1:k){
	if(G[j]!=0){
		for(m in 1:G[j]){
			ETA=which(F[w,]==FALSE)
			EPS=(Pred %in% ETA)
			EPS=which(EPS==TRUE)
			datos=datos[EPS,]
			x.scaled=scale(datos[,-1])
			y=cbind(datos[,1],x.scaled)
			datos=data.frame(y)
			colnames(datos)[1]='EXP'
			datos[,1]=E0[w]
			Pred=predict(FK[[w]],as.matrix(datos2))$cluster
			w=w+1
			}
		}				
	ETA=which(H[j,]==FALSE)
	EPS=(Pred %in% ETA)
	EPS=which(EPS==TRUE)
	datos=datos[EPS,]
	x.scaled=scale(datos[,-1])
	y=cbind(datos[,1],x.scaled)
	datos=data.frame(y)
	colnames(datos)[1]='EXP'
	datos[,1]=Emin[j]
	auxdatos=datos[,-c(2,28,29,30,32)]
	datos2=auxdatos
	Pred=predict(HK[[j]],as.matrix(datos2))$cluster
	}




if(G[11]!=0){
	for(m in 1:G[j]){
		ETA=which(F[w,]==FALSE)
		EPS=(Pred %in% ETA)
		EPS=which(EPS==TRUE)
		datos=datos[EPS,]
		datos[,1]=E0[w]
		x.scaled=scale(datos[,-1])
		y=cbind(datos[,1],x.scaled)
		datos=data.frame(y)
		colnames(datos)[1]='EXP'
		auxdatos=datos[,-c(2,28,29,30,32)]
		datos2=auxdatos
		Pred=predict(FK[[w]],as.matrix(datos2))$cluster
		w=w+1
		}
	}


Q2=cbind(rownames(datos),Pred)

nrow(datos)


d1=result$cluster
d2=Pred













A1=matrix(0,10)
B1=matrix(0,10)
C1=matrix(0,10)
D1=matrix(0,10)
E1=matrix(0,10)
datos=datos[,-c(28,29,30)]
Final=c()
for(i in 1:10){
data=datos
data=data[Pred==i,]
data=data[,DD[i,]]
x.scaled=scale(data[,-1])
w=predict(object=LDA[[i]],newdata=data.frame(x.scaled))
a=w$class
b=as.numeric(a)-1
A1[i]=sum(b)
r=(data$EXP==b & b==1)
q=as.numeric(r)
B1[i]=sum(q)
C1[i]=100*sum(q)/sum(b)
D1[i]=sum(b)*4265446/20000
E1[i]=(sum(q)/sum(b))*(sum(b)*4265446/20000)
MM=cbind(rownames(data),as.numeric(w$class)-1)
Final=rbind(Final,MM)
}

cbind(A1,B1,C1,D1,E1)
colSums(cbind(A1,B1,D1,E1))
sum(B1)*100/sum(A1)


sum(as.numeric(Final[,2]))



set.seed(ss)
k=10
library(DeducerExtras)
library(RODBC)
chanel <- odbcConnect("Ral98")
cadsql<-c('')
cadsql<- paste('SELECT',
'[EXPORTADO]',
',[dn]',
',isnull([MESES_ANTIGUEDAD],0) as [MESES_ANTIGUEDAD] ',
',isnull([ARPM_1],0) as [ARPM_1]',
',isnull([ARPM_2],0) as [ARPM_2]',
',isnull([ARPM_3],0) as [ARPM_3]',
',isnull([ARPU_VOICE_1],0) as [ARPU_VOICE_1]',
',isnull([ARPU_VOICE_2],0) as [ARPU_VOICE_2]',
',isnull([ARPU_VOICE_3],0) as [ARPU_VOICE_3]',
',isnull([ARPU_SMS_1],0) as [ARPU_SMS_1]',
',isnull([ARPU_SMS_2],0) as [ARPU_SMS_2]',
',isnull([ARPU_SMS_3],0) as [ARPU_SMS_3]',
',isnull([ARPU_DATA_1],0) as [ARPU_DATA_1]',
',isnull([ARPU_DATA_2],0) as [ARPU_DATA_2]',
',isnull([ARPU_DATA_3],0) as [ARPU_DATA_3]',
',isnull([ARPU_OTHER_1],0) as [ARPU_OTHER_1]',
',isnull([ARPU_OTHER_2],0) as [ARPU_OTHER_2]',
',isnull([ARPU_OTHER_3],0) as [ARPU_OTHER_3]',
',isnull([INGRESOS_SVA_1],0) as [INGRESOS_SVA_1]',
',isnull([INGRESOS_SVA_2],0) as [INGRESOS_SVA_2]',
',isnull([INGRESOS_SVA_3],0) as [INGRESOS_SVA_3]',
',isnull([MTO_IVA_RECARGA_1],0) as [MTO_IVA_RECARGA_1]',
',isnull([RECARGAS_1],0) as [RECARGAS_1]',
',isnull([MTO_IVA_RECARGA_2],0) as [MTO_IVA_RECARGA_2]',
',isnull([RECARGAS_2],0) as [RECARGAS_2]',
',isnull([MTO_IVA_RECARGA_3],0) as [MTO_IVA_RECARGA_3]',
',isnull([RECARGAS_3],0) as [RECARGAS_3]',
',isnull([CVE_EQUIPO],0) as [CVE_EQUIPO]',
',isnull([GAMA_ALTA_EQUIPO_PRIMERO],0) as [GAMA_ALTA_EQUIPO_PRIMERO]',
',isnull([CVE_EQUIPO_ULTIMO],0) as [CVE_EQUIPO_ULTIMO]',
',case when isnull([GAMA_ALTA_EQUIPO_ULTIMO],0)>0 then 1 else 0 end as [GAMA_ALTA_EQUIPO_ULTIMO]',
',isnull([QUEJAS_1],0)+isnull([QUEJAS_2],0)+isnull([QUEJAS_3],0) as [QUEJAS]',
' FROM [dbo].[JIC_MODEXP2]',
' where',
'cve_mes=201409',
'and id_num between 1 and 20000 order by id_num desc',sep=' ')
datos <- sqlQuery(chanel, cadsql)
close(chanel)
rownames(datos)=datos$dn




library(cclust)
library(clue)




for(i in 1:ncol(datos))
datos[,i]=as.numeric(datos[,i])
x.scaled=scale(datos[,-1])
y=cbind(datos[,1],x.scaled)
datos=data.frame(y)
colnames(datos)[1]='EXP'
#datos[,1]=Eini
auxdatos=datos[,-c(2,28,29,30,32)]
datos2=auxdatos
Pred=predict(Ini,as.matrix(datos2))$cluster

w=1
for(j in 1:k){
	if(G[j]!=0){
		for(m in 1:G[j]){
			ETA=which(F[w,]==FALSE)
			EPS=(Pred %in% ETA)
			EPS=which(EPS==TRUE)
			datos=datos[EPS,]
			auxdatos=datos[,-c(2,28,29,30,32)]
			datos2=auxdatos
			x.scaled=scale(datos[,-1])
			y=cbind(datos[,1],x.scaled)
			datos=data.frame(y)
			colnames(datos)[1]='EXP'
			#datos[,1]=E0[w]
			Pred=predict(FK[[w]],as.matrix(datos2))$cluster
			w=w+1
			}
		}				
	ETA=which(H[j,]==FALSE)
	EPS=(Pred %in% ETA)
	EPS=which(EPS==TRUE)
	datos=datos[EPS,]
	auxdatos=datos[,-c(2,28,29,30,32)]
	datos2=auxdatos
	x.scaled=scale(datos[,-1])
	y=cbind(datos[,1],x.scaled)
	datos=data.frame(y)
	colnames(datos)[1]='EXP'
	#datos[,1]=Emin[j]
	auxdatos=datos[,-c(2,28,29,30,32)]
	datos2=auxdatos
	Pred=predict(HK[[j]],as.matrix(datos2))$cluster
	}




if(G[11]!=0){
	for(m in 1:G[j]){
		ETA=which(F[w,]==FALSE)
		EPS=(Pred %in% ETA)
		EPS=which(EPS==TRUE)
		datos=datos[EPS,]
		auxdatos=datos[,-c(2,28,29,30,32)]
		datos2=auxdatos
		#datos[,1]=E0[w]
		x.scaled=scale(datos[,-1])
		y=cbind(datos[,1],x.scaled)
		datos=data.frame(y)
		colnames(datos)[1]='EXP'
		auxdatos=datos[,-c(2,28,29,30,32)]
		datos2=auxdatos
		Pred=predict(FK[[w]],as.matrix(datos2))$cluster
		w=w+1
		}
	}


Q3=cbind(rownames(datos),Pred)

nrow(datos)


d1=result$cluster
d2=Pred













A1=matrix(0,10)
B1=matrix(0,10)
C1=matrix(0,10)
D1=matrix(0,10)
E1=matrix(0,10)
datos=datos[,-c(28,29,30)]
Final=c()
for(i in 1:10){
data=datos
data=data[Pred==i,]
data=data[,DD[i,]]
x.scaled=scale(data[,-1])
w=predict(object=LDA[[i]],newdata=data.frame(x.scaled))
a=w$class
b=as.numeric(a)-1
A1[i]=sum(b)
r=(data$EXP==b & b==1)
q=as.numeric(r)
B1[i]=sum(q)
C1[i]=100*sum(q)/sum(b)
D1[i]=sum(b)*4265446/20000
E1[i]=(sum(q)/sum(b))*(sum(b)*4265446/20000)
MM=cbind(rownames(data),as.numeric(w$class)-1)
Final=rbind(Final,MM)
}

cbind(A1,B1,C1,D1,E1)
colSums(cbind(A1,B1,D1,E1))
sum(B1)*100/sum(A1)


sum(as.numeric(Final[,2]))













proc.time() - ptm

nrow(Final)



